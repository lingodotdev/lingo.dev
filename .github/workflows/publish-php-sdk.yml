name: Publish PHP SDK to Packagist

on:
  push:
    branches:
      - main
    paths:
      - 'php/sdk/**'
  workflow_dispatch:

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.0'
          extensions: mbstring, intl
          coverage: none
          tools: composer:v2, composer-semver

      - name: Install dependencies
        run: |
          cd php/sdk
          composer install --no-dev --no-interaction --prefer-dist

      - name: Get current version
        id: current_version
        run: |
          VERSION=$(php -r 'echo json_decode(file_get_contents("php/sdk/composer.json"), true)["version"];')
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Bump patch version
        id: bump_version
        run: |
          # Use composer-semver for version bumping (always patch for main branch pushes)
          NEW_VERSION=$(composer semver ${{ steps.current_version.outputs.version }} --increment=patch)
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
          
          # Update version in composer.json
          php -r '
          $composerJson = json_decode(file_get_contents("php/sdk/composer.json"), true);
          $composerJson["version"] = "${{ steps.bump_version.outputs.new_version }}";
          file_put_contents("php/sdk/composer.json", json_encode($composerJson, JSON_PRETTY_PRINT | JSON_UNESCAPED_SLASHES));
          '

      - name: Commit version bump
        if: github.ref == 'refs/heads/main'
        run: |
          git config --local user.email "devin-ai-integration[bot]@users.noreply.github.com"
          git config --local user.name "Devin AI"
          git add php/sdk/composer.json
          git commit -m "chore: bump PHP SDK version to ${{ steps.bump_version.outputs.new_version }}"
          git push

      - name: Publish to Packagist
        uses: wscourge/packagist-publish@v1
        with:
          username: lingodotdev
          api_token: ${{ secrets.PACKAGIST_API_TOKEN }}
