name: Claude Code PR Review

on:
  pull_request:
    types: [opened, synchronize]
    branches:
      - main

permissions:
  contents: read
  pull-requests: write
  issues: read

jobs:
  claude-review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Claude Code
        run: |
          npm install -g @anthropic-ai/claude-code
          claude --version

      - name: Get PR diff
        id: pr-diff
        run: |
          # Get the diff for this PR
          git fetch origin main
          git diff origin/main...HEAD > pr_diff.txt
          
          # Check if diff is not empty
          if [ ! -s pr_diff.txt ]; then
            echo "No changes to review"
            exit 0
          fi
          
          echo "diff_exists=true" >> $GITHUB_OUTPUT

      - name: Review PR with Claude Code
        if: steps.pr-diff.outputs.diff_exists == 'true'
        env:
          ANTHROPIC_API_KEY: ${{ secrets.CLAUDE_CODE_ANTHROPIC_API_KEY }}
        run: |
          # Create a review prompt
          cat > review_prompt.txt << 'EOF'
          Review this PR diff. Focus on code quality, security, and potential issues. Provide specific feedback with file references.

          EOF
          
          # Append the diff to the prompt
          cat pr_diff.txt >> review_prompt.txt
          
          # Run Claude Code review
          claude -p --output-format json --max-turns 1 < review_prompt.txt > claude_review.json
          
          # Extract the review content
          cat claude_review.json | jq -r '.content' > claude_review.md

      - name: Post review comment
        if: steps.pr-diff.outputs.diff_exists == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            
            try {
              const reviewContent = fs.readFileSync('claude_review.md', 'utf8');
              
              // Create comment body with proper formatting
              const commentBody = `## ü§ñ Claude Code Review
              
              ${reviewContent}
              
              ---
              *This review was generated by Claude Code. Please use your judgment when addressing the suggestions.*`;
              
              // Post the comment
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: commentBody
              });
              
              console.log('Review comment posted successfully');
            } catch (error) {
              console.error('Error posting review:', error);
              // Don't fail the workflow if comment posting fails
            }

      - name: Check for critical issues
        if: steps.pr-diff.outputs.diff_exists == 'true'
        run: |
          # Check if Claude identified any critical issues
          if grep -qi "critical\|security\|vulnerability" claude_review.md; then
            echo "‚ö†Ô∏è Critical issues found in PR. Please review carefully."
            echo "critical_issues=true" >> $GITHUB_OUTPUT
          else
            echo "No critical issues identified."
            echo "critical_issues=false" >> $GITHUB_OUTPUT
          fi
        id: critical-check

      - name: Summary
        if: steps.pr-diff.outputs.diff_exists == 'true'
        run: |
          echo "Claude Code review completed for PR #${{ github.event.number }}"
          if [ "${{ steps.critical-check.outputs.critical_issues }}" = "true" ]; then
            echo "‚ö†Ô∏è Critical issues were identified - please review the comments"
          else
            echo "‚úÖ Review completed - check the PR comments for feedback"
          fi