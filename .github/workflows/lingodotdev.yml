name: "Lingo.dev"

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Lingo.dev CLI version"
        default: "latest"
        required: false
      pull-request:
        description: "Create a pull request with the changes"
        type: boolean
        default: false
        required: false
      commit-message:
        description: "Commit message"
        default: "feat: update translations via @LingoDotDev"
        required: false
      pull-request-title:
        description: "Pull request title"
        default: "feat: update translations via @LingoDotDev"
        required: false
      working-directory:
        description: "Working directory"
        default: "."
        required: false
      process-own-commits:
        description: "Process commits made by this action"
        type: boolean
        default: false
        required: false
      parallel:
        description: "Run in parallel mode"
        type: boolean
        default: false
        required: false

jobs:
  lingodotdev:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build hermetic image
        run: docker build -f Dockerfile.repro -t lingo-repro:20.12.2 .

      - name: Prepare pnpm store path
        run: echo "REPRO_PNPM_STORE=${{ runner.temp }}/pnpm-store" >> $GITHUB_ENV

      - name: Cache pnpm store
        uses: actions/cache@v3
        with:
          path: ${{ env.REPRO_PNPM_STORE }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Lingo.dev (container)
        env:
          GH_TOKEN: ${{ github.token }}
          LINGODOTDEV_API_KEY: ${{ secrets.LINGODOTDEV_API_KEY }}
        run: |
          REPRO_PNPM_STORE="${{ env.REPRO_PNPM_STORE }}" bash scripts/repro/exec.sh \
            npx lingo.dev@${{ inputs.version }} ci \
              --api-key "$LINGODOTDEV_API_KEY" \
              --pull-request "${{ inputs['pull-request'] }}" \
              --commit-message "${{ inputs['commit-message'] }}" \
              --pull-request-title "${{ inputs['pull-request-title'] }}" \
              --working-directory "${{ inputs['working-directory'] }}" \
              --process-own-commits "${{ inputs['process-own-commits'] }}" \
              --parallel ${{ inputs.parallel }}
